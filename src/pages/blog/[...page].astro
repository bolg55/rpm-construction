---
import Blogcard from '@/components/blogcard.astro';
import Cta from '@/components/cta.astro';
import SectionHead from '@/components/sectionhead.astro';
import Pagination from '@/components/ui/pagination.astro';
import {
  type BlogPage,
  type Pagination as PaginationType,
} from '@/interfaces/blog-interface';
import Container from '@/layouts/Container.astro';
import Layout from '@/layouts/Layout.astro';
import { formatBlogPosts } from '@/utils/formatBlogPosts';
import { getCollection, type CollectionEntry } from 'astro:content';

export const getStaticPaths = async ({ paginate }: PaginationType) => {
  const blogPosts = await getCollection('blog');
  const formattedPosts: CollectionEntry<'blog'>[] = formatBlogPosts(blogPosts, {
    sortByDate: true,
  });
  return paginate(formattedPosts, { pageSize: 4 });
};
const { page } = Astro.props as { page: BlogPage };
---

<Layout title='Blog' description='This is the blog'>
  <Container>
    <main class='sm:mt-8 md:mt-16 max-w-screen-md mx-auto'>
      <SectionHead>
        <Fragment slot='subtitle'>Latest Posts</Fragment>
        <Fragment slot='title'>Blog</Fragment>
      </SectionHead>
      <ul class='grid gap-16 max-w-4xl mx-auto mt-4 sm:mt-16'>
        {page.data.map((post, index) => <Blogcard {post} {index} />)}
      </ul>
    </main>
    <div class='text-center mt-24 space-y-4 text-secondary'>
      <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
      <p class='text-sm'>Page {page.currentPage} of {page.lastPage}</p>
    </div>
  </Container>
  <Cta />
</Layout>
