---
// Get the page data from Strapi and pass it into the component
import PageLayout from '@/layouts/PageLayout.astro';
import { fetchStrapiData } from '@/queries/strapiQueries';
import About from '@/components/About.astro';
import Cta from '@/components/cta.astro';
import Contact from '@/components/Contact.astro';
import Testimonials from '@/components/react/Testimonials';
import Showcase from '@/components/react/Showcase';
import Container from '@/layouts/Container.astro';
import Link from '@/components/ui/link.astro';

// Generate dynamic paths from Strapi slugs
export const getStaticPaths = async () => {
  const pages = await fetchStrapiData('/pages');

  return pages.map((page: { slug: string }) => ({
    params: { slug: page.slug },
    props: { page },
  }));
};

interface Props {
  page: {
    dynamicPageSection: any;
    title: string;
    description: string;
    pageTitle: string;
    subtitle: string;
  };
}

const { page } = Astro.props;
---

<!-- Render your page content -->
<PageLayout
  title={`RPM | ${page.title}`}
  description={page.description}
  pageTitle={page.pageTitle}
  subtitle={page.subtitle}
>
  {
    page.dynamicPageSection.map((block: any) => {
      switch (block.__component) {
        case 'ui.link':
          return (
            <div class='text-lg flex items-center align-middle sm:justify-center'>
              <Link href={block.href} style={block.style}>
                {block.label}
              </Link>
            </div>
          );
        case 'layout.about':
          return (
            <Container>
              <About about={block.about} image={block.image} />
            </Container>
          );
        case 'layout.cta':
          return (
            <Cta
              heading={block.heading}
              subHeading={block.subHeading}
              link={block.link}
            />
          );
        case 'layout.contact':
          return (
            <Contact
              subHeading={block.subHeading}
              subject={block.subject}
              button={block.button}
            />
          );
        case 'layout.testimonial':
          return (
            <Container>
              <Testimonials
                client:load
                testimonials={block.testimonial}
                numberOfColumns={block.numberOfColumns}
              />
            </Container>
          );
        case 'layout.showcase':
          return <Showcase client:load images={block.images} />;

        // default:
        //   console.warn(`Unknown component type: ${block.__component}`);
        //   return null;
      }
    })
  }
</PageLayout>
