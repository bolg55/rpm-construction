---
import Blogcard from '@/components/blogcard.astro';
import Pagination from '@/components/ui/pagination.astro';
import {
  type BlogPage,
  type Pagination as PaginationType,
} from '@/interfaces/blog-interface';
import Container from '@/layouts/Container.astro';
import PageLayout from '@/layouts/PageLayout.astro';
import { formatBlogPosts } from '@/utils/formatBlogPosts';
import { getCollection, type CollectionEntry } from 'astro:content';

export const getStaticPaths = async ({ paginate }: PaginationType) => {
  const blogPosts = await getCollection('articles');
  const formattedPosts: CollectionEntry<'articles'>[] = formatBlogPosts(
    blogPosts,
    {
      sortByDate: true,
    }
  );
  return paginate(formattedPosts, { pageSize: 6 });
};
const { page } = Astro.props as { page: BlogPage };
---

<PageLayout
  title='RPM | Blog'
  description='Read the latest articles from the RPM blog.'
  pageTitle='Blog'
  subtitle='Read the latest articles from the RPM blog'
>
  <Container>
    <ul class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>
      {page?.data.map((post, index) => <Blogcard post={post.data} {index} />)}
    </ul>
  </Container>
  <div class='mb-24 text-center mt-24 space-y-4 text-secondary'>
    <Pagination prevUrl={page?.url.prev} nextUrl={page?.url.next} />
    <p class='text-sm'>Page {page?.currentPage} of {page?.lastPage}</p>
  </div>
</PageLayout>
