---
import HeroImages from './react/HeroImages';
import HeroText from './react/HeroText';
import Link from './ui/link.astro';

interface Button {
  href: string;
  style: 'primary' | 'secondary' | 'plain' | 'animated';
  label: string;
}

const { hero } = Astro.props;
const { heading, subheading, heroImg, cta } = hero;
---

<div class='relative isolate'>
  <svg
    class='absolute inset-x-0 top-0 -z-10 h-[64rem] w-full stroke-red-200 [mask-image:radial-gradient(32rem_32rem_at_center,white,transparent)]'
    aria-hidden='true'
  >
    <defs>
      <pattern
        id='animated-pattern'
        width='200'
        height='200'
        patternUnits='userSpaceOnUse'
      >
        <path d='M.5 200V.5H200' fill='none'></path>
        <!-- Add animation -->
        <animateTransform
          attributeName='patternTransform'
          type='translate'
          from='0,0'
          to='200,0'
          dur='10s'
          repeatCount='indefinite'></animateTransform>
      </pattern>
    </defs>
    <rect width='100%' height='100%' fill='url(#animated-pattern)'></rect>
  </svg>
</div>
<div class='overflow-hidden'>
  <div class='mx-auto max-w-7xl px-2 pb-32 pt-36 sm:pt-60 lg:px-8 lg:pt-32'>
    <div
      class='mx-auto max-w-2xl gap-x-14 lg:mx-0 lg:flex lg:max-w-none lg:items-center'
    >
      <HeroText
        client:load
        heading={heading}
        subheading={subheading}
        cta={cta}
      />
      <!-- <div class='relative w-full max-w-xl lg:shrink-0 xl:max-w-2xl'>
        <h1
          class='text-4xl font-bold tracking-tighter font-heading text-primary sm:text-6xl'
        >
          {heading}
        </h1>
        <p
          class='mt-6 text-lg leading-8 text-gray-600 sm:max-w-md lg:max-w-none'
        >
          {subheading}
        </p> -->
      <!-- <div class='mt-10 flex items-center gap-x-4 lg:gap-x-6'>
        {
          cta.map((button: Button) => (
            <Link href={button.href} style={button.style} class='w-full'>
              {button.label}
            </Link>
          ))
        }
      </div>
    </div> -->
      <HeroImages images={heroImg} client:load />
    </div>
  </div>
</div>
